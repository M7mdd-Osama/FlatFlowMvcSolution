@model FlatFlow.PL.ViewModels.ApartmentDetailsWithGroupsViewModel
@{
    Layout = null;
    ViewData["ActivePage"] = "Apartments";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Title - Apartment Details</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" rel="stylesheet">
    <link href="~/css/apartmentdetailsstyle.css" rel="stylesheet" />
    <style>
        /* Facebook Groups Section - Modern Professional & Cute Style */
        .facebook-groups-section {
            background: rgba(255, 255, 255, 0.03);
            border-radius: 16px;
            padding: 20px;
            margin-bottom: 25px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(124, 58, 237, 0.15);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .section-header {
            margin-bottom: 20px;
            text-align: center;
        }

        .section-subtitle {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.85rem;
        }

        .groups-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
            gap: 15px;
        }

        .group-card {
            background: linear-gradient(145deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.02));
            border-radius: 14px;
            padding: 16px;
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            border: 1px solid rgba(124, 58, 237, 0.1);
            position: relative;
            overflow: hidden;
        }

            .group-card::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 3px;
                background: linear-gradient(90deg, #7c3aed, #1877F2);
                opacity: 0;
                transition: opacity 0.3s ease;
            }

            .group-card:hover {
                transform: translateY(-4px);
                box-shadow: 0 8px 25px rgba(24, 119, 242, 0.2);
                border-color: rgba(124, 58, 237, 0.3);
            }

                .group-card:hover::after {
                    opacity: 1;
                }

            .group-card.posted {
                background: linear-gradient(145deg, rgba(16, 185, 129, 0.05), rgba(34, 211, 153, 0.03));
                border-color: rgba(16, 185, 129, 0.1);
            }

        .group-header {
            display: flex;
            align-items: center;
            margin-bottom: 12px;
            gap: 10px;
        }

        .group-icon {
            width: 32px;
            height: 32px;
            background: rgba(24, 119, 242, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #1877F2;
            font-size: 1rem;
            flex-shrink: 0;
        }

        .group-name {
            font-weight: 600;
            color: #ffffff;
            flex-grow: 1;
            font-size: 0.95rem;
        }

        .status-badge {
            padding: 4px 10px;
            border-radius: 16px;
            font-size: 0.7rem;
            font-weight: 600;
            background: rgba(245, 158, 11, 0.1);
            color: #f59e0b;
            border: 1px solid rgba(245, 158, 11, 0.2);
        }

            .status-badge.active {
                background: rgba(16, 185, 129, 0.1);
                color: #10b981;
                border-color: rgba(16, 185, 129, 0.2);
            }

        .group-actions {
            display: flex;
            gap: 8px;
            margin-bottom: 12px;
        }

        .btn-visit {
            background: rgba(24, 119, 242, 0.1);
            color: #1877F2;
            border: 1px solid rgba(24, 119, 242, 0.3);
            padding: 8px 12px;
            border-radius: 8px;
            font-size: 0.8rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 6px;
            text-decoration: none;
            transition: all 0.3s ease;
            flex-grow: 1;
            justify-content: center;
        }

            .btn-visit:hover {
                background: rgba(24, 119, 242, 0.2);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(24, 119, 242, 0.1);
            }

        .btn-toggle {
            background: rgba(124, 58, 237, 0.1);
            color: #7c3aed;
            border: 1px solid rgba(124, 58, 237, 0.3);
            padding: 8px 12px;
            border-radius: 8px;
            font-size: 0.8rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 6px;
            transition: all 0.3s ease;
            flex-grow: 1;
            justify-content: center;
            cursor: pointer;
        }

            .btn-toggle.posted {
                background: rgba(16, 185, 129, 0.1);
                color: #10b981;
                border-color: rgba(16, 185, 129, 0.3);
            }

            .btn-toggle:hover {
                background: rgba(124, 58, 237, 0.2);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(124, 58, 237, 0.1);
            }

            .btn-toggle.posted:hover {
                background: rgba(16, 185, 129, 0.2);
                box-shadow: 0 4px 12px rgba(16, 185, 129, 0.1);
            }

        .group-footer {
            border-top: 1px dashed rgba(255, 255, 255, 0.1);
            padding-top: 12px;
        }

        .engagement-metrics {
            display: flex;
            gap: 12px;
        }

        .metric {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 0.75rem;
            color: rgba(255, 255, 255, 0.7);
        }

            .metric i {
                font-size: 0.8rem;
                color: #7c3aed;
            }

        .no-groups {
            text-align: center;
            padding: 25px 16px;
            color: rgba(255, 255, 255, 0.7);
        }

        .no-groups-icon {
            width: 64px;
            height: 64px;
            background: rgba(24, 119, 242, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 16px;
            color: #1877F2;
            font-size: 1.6rem;
        }

        .no-groups h4 {
            color: #ffffff;
            font-size: 1.1rem;
            margin-bottom: 6px;
        }

        .no-groups p {
            margin-bottom: 16px;
            font-size: 0.85rem;
        }

        .btn-add-group {
            background: linear-gradient(135deg, #7c3aed, #a855f7);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 600;
            align-items: center;
            gap: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
        }

            .btn-add-group:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(124, 58, 237, 0.3);
            }

        @@media (max-width: 768px) {
            .groups-container {
                grid-template-columns: 1fr;
            }

            .group-actions {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="floating-elements"></div>
    <!-- Media Modal -->
    <div id="mediaModal" class="media-modal">
        <div class="media-modal-content">
            <span class="media-modal-close">&times;</span>
            <img id="modalImage" src="" alt="" style="display: none;">
            <video id="modalVideo" controls style="display: none;">
                <source src="" type="video/mp4">
                Your browser does not support the video tag.
            </video>
        </div>
    </div>
    <div class="main-container">
        <div class="row g-0 h-100">
            @await Html.PartialAsync("_Sidebar")
            <!-- Main Content -->
            <div class="col-lg-10 col-md-9">
                <div class="main-content">
                    <!-- Header Section -->
                    <div class="header-section">
                        <h1 class="page-title">@Model.Title</h1>
                        <a href="@Url.Action("Index", "Apartment")" class="back-btn">
                            <i class="fas fa-arrow-left"></i> Back to Apartments
                        </a>
                    </div>
                    <!-- Apartment Details -->
                    <div class="details-container">
                        <!-- Image Gallery -->
                        <div class="image-gallery">
                            @if (Model.Images != null && Model.Images.Any())
                            {
                                var firstMedia = Model.Images.First();
                                bool isVideo = firstMedia.EndsWith(".mp4", StringComparison.OrdinalIgnoreCase) ||
                                firstMedia.EndsWith(".avi", StringComparison.OrdinalIgnoreCase) ||
                                firstMedia.EndsWith(".mov", StringComparison.OrdinalIgnoreCase);
                                @if (isVideo)
                                {
                                    <div class="video-thumbnail">
                                        <video class="main-video" id="mainVideo" preload="metadata" muted onclick="openMediaModal('@firstMedia', true)">
                                            <source src="@firstMedia#t=1" type="video/mp4" />
                                        </video>
                                        <div class="video-indicator">
                                            <i class="fas fa-video"></i>
                                            <span>Video</span>
                                        </div>
                                        <div class="video-play-overlay" onclick="openMediaModal('@firstMedia', true)">
                                            <i class="fas fa-play"></i>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <img src="@firstMedia" alt="@Model.Title" class="main-image" id="mainImage" onclick="openMediaModal('@firstMedia', false)" />
                                }
                                @if (Model.Images.Count > 1)
                                {
                                    <div class="image-thumbnails">
                                        @for (int i = 0; i < Model.Images.Count; i++)
                                        {

                                            var mediaUrl = Model.Images[i];
                                            bool isThumbnailVideo = mediaUrl.EndsWith(".mp4", StringComparison.OrdinalIgnoreCase) ||
                                            mediaUrl.EndsWith(".avi", StringComparison.OrdinalIgnoreCase) ||
                                            mediaUrl.EndsWith(".mov", StringComparison.OrdinalIgnoreCase);
                                            @if (isThumbnailVideo)
                                            {
                                                <div style="position: relative; width: 60px; height: 60px; flex-shrink: 0;">
                                                    <video class="thumbnail @(i == 0 ? "active" : "")"
                                                           preload="metadata" muted
                                                           onclick="changeMainMedia('@mediaUrl', this, true)"
                                                           style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; border-radius: 8px; cursor: pointer;">
                                                        <source src="@mediaUrl#t=1" type="video/mp4" />
                                                    </video>
                                                    <div style="position: absolute; top: 2px; right: 2px; background: rgba(0,0,0,0.7); border-radius: 50%; width: 16px; height: 16px; display: flex; align-items: center; justify-content: center;">
                                                        <i class="fas fa-play" style="font-size: 8px; color: white; margin-left: 1px;"></i>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <img src="@mediaUrl" alt="@Model.Title" class="thumbnail @(i == 0 ? "active" : "")"
                                                     onclick="changeMainMedia('@mediaUrl', this, false)" />
                                            }
                                        }
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="no-image">
                                    <i class="fas fa-image"></i>
                                    <p>No images available</p>
                                </div>
                            }
                        </div>
                        <!-- Apartment Information -->
                        <div class="apartment-info">
                            <div class="price-section">
                                <div class="price">$@Model.Price.ToString("N0")/month</div>
                                <span class="status-badge @(Model.IsRented ? "badge-rented" : "badge-available")">
                                    @(Model.IsRented ? "Rented" : "Available")
                                </span>
                            </div>
                            <div class="info-item">
                                <div class="info-icon">
                                    <i class="fas fa-map-marker-alt"></i>
                                </div>
                                <div class="info-content">
                                    <div class="info-label">Location</div>
                                    <div class="info-value">@Model.Location</div>
                                </div>
                            </div>
                            @if (!string.IsNullOrWhiteSpace(Model.Description))
                            {
                                <div class="description-section">
                                    <h3 class="section-title">
                                        <i class="fas fa-info-circle"></i>
                                        Description
                                    </h3>
                                    <div style="white-space: pre-wrap;">@Html.Raw(Html.Encode(Model.Description).Replace("\n", "<br />"))</div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Facebook Groups Section - Enhanced Professional & Cute Design -->
                    <div class="facebook-groups-section">
                        <div class="section-header">
                            <h3 class="section-title">
                                <i class="fab fa-facebook-square"></i>
                                Facebook Groups (@(Model.FacebookGroups?.Count ?? 0))
                            </h3>
                            <div class="section-subtitle">Share this apartment with potential renters</div>
                        </div>

                        @if (Model.FacebookGroups != null && Model.FacebookGroups.Any())
                        {
                            <div class="groups-container">
                                @foreach (var group in Model.FacebookGroups)
                                {
                                    <div class="group-card @(group.IsPosted ? "posted" : "")">
                                        <div class="group-header">
                                            <div class="group-icon">
                                                <i class="fab fa-facebook"></i>
                                            </div>
                                            <div class="group-name">@group.GroupName</div>
                                            <div class="status-badge @(group.IsPosted ? "active" : "")">
                                                <i class="fas fa-@(group.IsPosted ? "check" : "clock")"></i>
                                                @(group.IsPosted ? "Posted" : "Pending")
                                            </div>
                                        </div>

                                        <div class="group-actions">
                                            <a href="@group.GroupLink" target="_blank" class="btn-visit">
                                                <i class="fas fa-external-link-alt"></i>
                                                Visit Group
                                            </a>
                                            <button type="button" class="btn-toggle @(group.IsPosted ? "posted" : "")"
                                                    onclick="togglePostStatus(@group.ApartmentId, @group.GroupId, @group.IsPosted.ToString().ToLower())">
                                                <i class="fas fa-@(group.IsPosted ? "times" : "check")"></i>
                                                @(group.IsPosted ? "Undo Post" : "Mark as Posted")
                                            </button>
                                        </div>

                                        <div class="group-footer">
                                            <div class="engagement-metrics">
                                                <div class="metric">
                                                    <i class="fas fa-fire"></i>
                                                    <span>Active community</span>
                                                </div>
                                                <div class="metric">
                                                    <i class="fas fa-bolt"></i>
                                                    <span>High activity</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="no-groups">
                                <div class="no-groups-icon">
                                    <i class="fab fa-facebook-messenger"></i>
                                </div>
                                <h4>No Facebook Groups Yet</h4>
                                <p>You haven't added any Facebook groups for posting yet.</p>
                                <a href="/FacebookGroup/Add" class="btn-add-group">
                                    <i class="fas fa-plus"></i>
                                    Add Facebook Group
                                </a>
                            </div>
                        }
                    </div>
                    <!-- Clients Section -->
                    <div class="clients-section">
                        <h3 class="section-title">
                            <i class="fas fa-users"></i>
                            Clients (@(Model.Clients?.Count ?? 0))
                        </h3>
                        @if (Model.Clients != null && Model.Clients.Any())
                        {
                            @foreach (var client in Model.Clients)
                            {
                                <div class="client-card">
                                    <div class="client-info">
                                        <div class="client-details">
                                            <div class="client-name">@client.FullName</div>
                                            <div class="client-phone">
                                                <i class="fas fa-phone"></i>
                                                @client.Phone
                                            </div>
                                        </div>
                                        <div class="client-commission">
                                            $@(client.Commission?.ToString("N0") ?? "0")
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="no-clients">
                                <i class="fas fa-user-friends"></i>
                                <h4>No Clients Yet</h4>
                                <p>This apartment doesn't have any clients assigned yet.</p>
                            </div>
                        }
                    </div>
                    <!-- Action Buttons -->
                    <div class="action-buttons">
                        <a href="@Url.Action("Edit", "Apartment", new { id = Model.Id })" class="btn-edit">
                            <i class="fas fa-edit"></i>
                            Edit Apartment
                        </a>
                        <button type="button" class="btn-toggle-status" onclick="toggleRentStatus(@Model.Id, @Model.IsRented.ToString().ToLower())">
                            <i class="fas fa-@(Model.IsRented ? "unlock" : "lock")"></i>
                            Mark as @(Model.IsRented ? "Available" : "Rented")
                        </button>
                        <button type="button" class="btn-delete" onclick="confirmDelete(@Model.Id)">
                            <i class="fas fa-trash"></i>
                            Delete Apartment
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Hidden form for delete -->
    <form id="deleteForm" method="post" style="display: none;">
        @Html.AntiForgeryToken()
    </form>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/apartmentdetailsjs.js"></script>
</body>
</html>